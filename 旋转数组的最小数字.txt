/*
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。 
*/
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
        int length = rotateArray.size();
        if(length==0)return 0;
        
        int left = 0;
        int right = length-1;
        int mid = 0;
        while(rotateArray[left]>=rotateArray[right])
        {
            if(right-left==1)
            {
                mid = right;
                break;
            }
            mid = left+(right-left)/2;
            
            if(rotateArray[left]<= rotateArray[mid])
            {
                left = mid;  
            }
            else
            {
                right = mid;
            }
        }
        return rotateArray[mid];
        
        
    }
};


int main(){
    Solution s;
    //vector<int> num = {0,1,2,3,4,5};
    //vector<int> num = {4,5,6,7,1,2,3};
    vector<int> num = {2,2,2,2,1,2};
    int result = s.minNumberInRotateArray(num);
    // 输出
    cout<<result<<endl;
    return 0;
}