感觉两道题都不难吧

第一题：给一个数，求出数的最小排列顺序，但是0不能排在第一位
直接将long转换为string 使用c++11里的新函数to_string这个函数包含在
string头文件里面，直接使用就好
然后sort一下，接着判断下前面是否为零找到第一个不为零得数，和第一位交换
然后自己写一个string to long 就好
result = reault*10+str[i]-'0'
也可以直接用atoi(str.c_str())
但是记得加头文件
#include<stdlib.h>

第二题：给出N个孩子，M对数字对，每个孩子有一个数值，数字对里面的数字是孩子的编号
如果出现在同一队里就是同一组，然后求出每组最大的数值和，没出现在M里的单独为一队

这道题，第一看到就是用动态规划
想了下组的划分
明白了用什么动态规划，直接使用两个数组就完事了
比如<1,2><2,3><1,3>
我们将1的值加到二上，二的值加到一上，第二组，2,3同样处理，第三组1,3都加过了所以为了判断这种情况
我们加一个tag标记，加过的记为1，只有两个数没有同时加过才进行增加
最后遍历一下，找出最大值即可。总共就进行了N+M次操作，N次赋值，M次修改
注意一点：M里面的孩子编号要减一，我们是从0开始的，而题上给的是从1开始的