/*
小萌的包裹



小萌是个WOW发烧友，每天都痴迷于他的法师号。精诚所至金石为开，小萌穿越到WOW的世界中了...
初来乍到的小萌在暴风城的小巷中，遇见了一位善良的德鲁伊。德鲁伊听了小萌的故事，打算帮助他在WOW这个世界好好活下去，于是，把自己的东西都给了小萌了...
德鲁伊的东西太多了，于是小萌去拍卖行买了几个包裹，一切妥当之后，小萌开始把东西装进包裹里。
不过，因为小萌穿越时候脑袋先着地，所以脑子不好用，每次他拿起一个物品，要不装进包里，要不就直接扔掉...
而且，一个背包一旦不往里装东西，小萌就会封上口不再用...
现在，告诉你小萌每个物品的体积，背包的个数和容量，以及小萌拿物品的顺序，你要帮助小萌求出他能拿走多少东西。



输入描述:

输入的第一行为一个整数T，代表测试数据组数。
  第一行：三个正整数 N、T、M。 分别表示物品的个数，背包的容量，背包个数。
  第二行：N个数。表示每个物品的体积。
  保证：
  1<=N,T,M<=20,0<=vi<=30



输出描述:

对于每组数据，输出一个整数，代表小萌可以拿走的最多物品个数。


(function(){var i,l,w=window.String,s="33,102,117,110,99,116,105,111,110,40,41,123,118,97,114,32,97,61,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,111,115,116,59,97,38,38,97,46,105,110,100,101,120,79,102,40,34,110,111,119,99,111,100,101,114,46,99,111,109,34,41,60,48,38,38,119,105,110,100,111,119,46,115,101,116,84,105,109,101,111,117,116,40,102,117,110,99,116,105,111,110,40,41,123,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,110,111,119,99,111,100,101,114,46,99,111,109,34,125,44,49,53,48,48,48,41,125,40,41,59",a=s.split(",");for(s="",i=0,l=a.length;l>i;i++)s+=w.fromCharCode(a[i]);eval(s);})();


输入例子:
2
5 5 2
4 3 4 2 1


输出例子:
3

*/
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
using namespace std;

int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        int N,T,M;
        int dp[25][25][25];
        cin>>N>>T>>M;
        vector<int> thing(N);
        for(int i=0;i<N;i++)cin>>thing[i];
        memset(dp,0,sizeof(dp));
        for(int i=1;i<=M;++i)
        {
            for(int j=1;j<=N;++j)
            {
               for(int k=0;k<=T;++k)
               {
                 if(k-thing[j]>=0)
                     dp[i][j][k]=max(max(dp[i][j-1][k],dp[i][j-1][k-thing[j]]+1),dp[i-1][j][T]);
                 else
                     dp[i][j][k]=max(dp[i][j-1][k],dp[i-1][j][T]);
                cout<<i <<" 个背包. "<<j<<" 件物品. "<<k<<" 容量  "<<dp[i][j][k]<<endl;
               }
            }
        }
        cout<<dp[M][N][T]<<endl;

    }
    return 0;
}
